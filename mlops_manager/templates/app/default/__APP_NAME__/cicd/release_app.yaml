substitutions:
  _APP_NAME: "{{app_name}}"
  _BUILD_LABEL: "${SHORT_SHA:-HEAD}"
  _RELEASE_LABEL: "${BRANCH_NAME:-local}"
  _RELEASE_ARTIFACTS_DEST: "{{gcp_storage_root}}/release/${_RELEASE_LABEL}"
  _DOCKER_BUILD_IMAGE: gcr.io/cloud-builders/docker
  _GCLOUD_BUILD_IMAGE: gcr.io/cloud-builders/gcloud
  _IMAGE_TGT_BASE: "gcr.io/${PROJECT_ID}/${_APP_NAME}"
  _BUILD_IMAGE_TGT: "${_IMAGE_TGT_BASE}:build-${_BUILD_LABEL}"
  _RELEASE_IMAGE_TGT: "${_IMAGE_TGT_BASE}:release-${_RELEASE_LABEL}-${_BUILD_LABEL}"
  _RELEASE_CONFIG_TGT: "release.yaml"
  _RELEASE_PIPELINES_TGT: "release-${_RELEASE_LABEL}-${_BUILD_LABEL}/pipelines"
  _RELEASE_PIPELINES_MANIFEST_TGT: "pipelines-manifest.yaml"
  _RELEASE_IMAGE_MANIFEST_TGT: "image.manifest"

options:
  dynamic_substitutions: True
  substitution_option: 'ALLOW_LOOSE'

artifacts:
  objects:
    location: "${_RELEASE_ARTIFACTS_DEST}"
    paths:
      - ${_RELEASE_CONFIG_TGT}
      - ${_RELEASE_PIPELINES_TGT}/*
      - ${_RELEASE_PIPELINES_MANIFEST_TGT}
      - ${_RELEASE_IMAGE_MANIFEST_TGT}

images:
  - ${_RELEASE_IMAGE_TGT}
  - ${_RELEASE_IMAGE_TGT}-gpu

steps:
  - name: ${_BUILD_IMAGE_TGT}
    id: release config
    args: [
      "-c", "config/base.yaml",
      "-c", "config/${_RELEASE_LABEL}.yaml",
      "--out-file", "${_RELEASE_CONFIG_TGT}",
      "release_config", 
      "--label", "${_RELEASE_LABEL}",
      "--build", "${_BUILD_LABEL}",
      "--image", "default=${_RELEASE_IMAGE_TGT}",
      "--image", "cpu=${_RELEASE_IMAGE_TGT}",
      "--image", "gpu=${_RELEASE_IMAGE_TGT}-gpu",
      ]

  - name: ${_BUILD_IMAGE_TGT}
    id: build pipelines
    args: [
      "-c", "config/base.yaml",
      "-c", "config/${_RELEASE_LABEL}.yaml",
      "-c", "${_RELEASE_CONFIG_TGT}",
      "--out-file", "${_RELEASE_PIPELINES_MANIFEST_TGT}",
      "build_pipelines", 
      "--out-dir", "${_RELEASE_PIPELINES_TGT}"
    ]

  - name: ${_BUILD_IMAGE_TGT}
    id: release pipelines
    args: [
      "-c", "config/base.yaml",
      "-c", "config/${_RELEASE_LABEL}.yaml",
      "-c", "${_RELEASE_CONFIG_TGT}",
      "--out-file", "${_RELEASE_CONFIG_TGT}",
      "release_config",
      "--pipelines-manifest", "${_RELEASE_PIPELINES_MANIFEST_TGT}"
      ]

  - name: ${_DOCKER_BUILD_IMAGE}
    id: release cpu
    entrypoint: docker
    args: [
      "build", 
      "--file", "cicd/docker/release.dockerfile",
      "-t", "${_RELEASE_IMAGE_TGT}", 
      "--build-arg", "BUILD_IMAGE=${_BUILD_IMAGE_TGT}", 
      "--build-arg", "RELEASE_CONFIG_SRC=${_RELEASE_CONFIG_TGT}", 
      "--build-arg", "PIPELINE_JOB_SPEC_SRC=${_RELEASE_PIPELINES_TGT}", 
      "."
    ]
    waitFor: ['release pipelines']

  - name: ${_DOCKER_BUILD_IMAGE}
    id: release gpu
    entrypoint: docker
    args: [
      "build", 
      "--file", "cicd/docker/release.dockerfile",
      "-t", "${_RELEASE_IMAGE_TGT}-gpu", 
      "--build-arg", "BUILD_IMAGE=${_BUILD_IMAGE_TGT}-gpu", 
      "--build-arg", "RELEASE_CONFIG_SRC=${_RELEASE_CONFIG_TGT}", 
      "--build-arg", "PIPELINE_JOB_SPEC_SRC=${_RELEASE_PIPELINES_TGT}", 
      ".",
    ]
    waitFor: ['release pipelines']

  - name: ${_GCLOUD_BUILD_IMAGE}
    id: release image manifest
    entrypoint: bash
    args: ['-c', 'echo ${_RELEASE_IMAGE_TGT} > ${_RELEASE_IMAGE_MANIFEST_TGT}']
    waitFor:
      - release cpu
      - release gpu