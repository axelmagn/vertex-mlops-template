steps:
  # TODO(axelmagn): unit testing

  - id: make_python_package
    name: python
    entrypoint: python
    args: ["setup.py", "sdist"]

  - id: make_docker_image
    name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', "us-central1-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO_NAME}/${_APP_NAME}:${_DIST_VERSION}", '.']

  - id: push_docker_image
    name: 'gcr.io/cloud-builders/docker'
    args: ['push', "us-central1-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO_NAME}/${_APP_NAME}:${_DIST_VERSION}"]

  - id: run_pipeline
    name: 'us-central1-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO_NAME}/${_APP_NAME}:${_DIST_VERSION}'
    entrypoint: 'python'
    args: ['-m', '${_APP_NAME}', 'run_pipeline', '${_PIPELINE_NAME}']

timeout: 1200s

artifacts:
  objects:
    # TODO(axelmagn): dynamic bucket
    location: gs://${_BUCKET_NAME}/${_APP_NAME}/build/${BUILD_ID}
    paths:
      # TODO(axelmagn): dynamic versioning 
      - dist/${_APP_NAME}-${_DIST_VERSION}.tar.gz
images:
  - us-central1-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO_NAME}/${_APP_NAME}:${_DIST_VERSION}