options:
  dynamic_substitutions: True
  substitution_option: 'ALLOW_LOOSE'

substitutions:
  # Name of the app
  _APP_NAME: "{{app_name}}"

  # Unique label for artifacts resulting from this build.
  _BUILD_LABEL: "build-${SHORT_SHA:-local}"
  
  # Artifact Registry Repository
  _ARTIFACT_REPO: "{{artifact_repo}}"

  # Artifact Registry Repository
  _ARTIFACT_GCS_ROOT: "{{artifact_gcs_root}}" # GCS bucket path to put
  

  # Docker image URI for resulting image
  _IMAGE_TARGET: "${_ARTIFACT_REPO}/${_APP_NAME}:${_BUILD_LABEL}"
  
  # Main pipeline to deploy
  # TODO(author): define this variable if this workflow includes a deploy step
  _DEPLOY_PIPELINE_NAME: "{{pipeline_name}}"
  _DEPLOY_PIPELINE_ROOT: "{{pipeline_root}}"
  _DEPLOY_PIPELINE_RUN_ID: ${_DEPLOY_PIPELINE_NAME}-${BUILD_LABEL}

# Set a fairly long timeout (8 hours) to allow for long pipeline execution times
# during deployment.
timeout: 28800s

steps:
  # Docker Build
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', '${_IMAGE_TARGET}', '.']

  # Run unit tests
  - name: '${_IMAGE_TARGET}'
    entrypoint: python
    args: [
      "-m", "pytest",
      "--junitxml=${_BUILD_LABEL}_test_log.xml",
    ]
    
  # Docker push to Google Artifact Registry
  # only necessary if this workflow also deploys pipelines
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push',  '${_IMAGE_TARGET}']
    
  # Compile Deployment Pipeline
  - name: '${_IMAGE_TARGET}'
    entrypoint: python
    args: [
      "-m", "${_APP_NAME}.pipelines.${_DEPLOY_PIPELINE_NAME}", 
      "compile", 
      "-o", "${_DEPLOY_PIPELINE_NAME}.json",
    ]

  # Run Deployment Pipeline
  - name: '${_IMAGE_TARGET}'
    entrypoint: python
    args: [
      "-m", "${_APP_NAME}.pipelines.${_DEPLOY_PIPELINE_NAME}", 
      "run", 
      "--package", "${_DEPLOY_PIPELINE_NAME}.json",
      "--pipeline_root", "${_DEPLOY_PIPELINE_ROOT}",
      "--project", "${PROJECT_ID}",
    ]

# Save test logs to Google Cloud Storage
artifacts:
  objects:
    location: ${_ARTIFACT_GCS_ROOT}
    paths:
      - ${_BUILD_LABEL}_test_log.xml
      - ${_DEPLOY_PIPELINE_NAME}.json 

# Store images in Google Artifact Registry
images:
  - ${_IMAGE_TARGET}
